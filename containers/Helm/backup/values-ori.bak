# Default values for ran-5g.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  srs_jbpf: ghcr.io/microsoft/jrtc-apps/srs-jbpf:srsran25.04-latest
  srs_jbpf_proxy: ghcr.io/microsoft/jrtc-apps/srs-jbpf-sdk:srsran25.04-latest
  pullPolicy: Always

HOSTNAME: ""

resources:
  gnb:
    limits:
      cpu: 5
      memory: 20Gi
      hugepages1Gi: 4Gi
    requests:
      cpu: 5
      memory: 20Gi
      hugepages1Gi: 4Gi
  jbpf_proxy:
    limits:
      cpu: 500m
      memory: 500Mi
    requests:
      cpu: 500m
      memory: 500Mi
  jrtc:
    limits:
      cpu: 1
      memory: 1Gi
      hugepages2Gi: 2Gi
    requests:
      cpu: 1
      memory: 1Gi
      hugepages2Gi: 2Gi
  das:
    limits:
      cpu: 1
      memory: 2Gi
      hugepages2Gi: 4Gi
    requests:
      cpu: 1
      memory: 2Gi
      hugepages2Gi: 4Gi
  dmimo:
    limits:
      cpu: 1
      memory: 2Gi
      hugepages2Gi: 4Gi
    requests:
      cpu: 1
      memory: 2Gi
      hugepages2Gi: 4Gi


duConfigs:
  du1:
    midhaul:
      # IP address to be assigned to the DU pod midhaul interface
      ip: 192.168.110.233
    cells:
      cell1:
        physicalCellID: 2017
        cellID: 3333
        ruNAME: "RU1"
        ruLocalMAC: "66:44:33:22:11:00" # RAN server fronthaul MAC address
        ruRemoteMAC: "6C:AD:AD:00:00:69" # Remote RU fronthaul MAC address
        ruVLAN: "1"
        ruDPDKResource: "intel.com/intel_sriov_dpdk_ru0"
        ruDLArfcn: 630684
        ruBandwidth: 40
      # cell2:
      #   ruDPDKResource: "intel.com/intel_sriov_dpdk_ru1"
      # cell3:
      #   ruDPDKResource: "intel.com/intel_sriov_dpdk_ru3"
      # cell4:
      #   ruDPDKResource: "intel.com/intel_sriov_dpdk_ru3"

cell_cfg:
  plmn: "00101"


ngcParams:
  coreIP: 192.168.101.50 
  tac: "000001" 
  plmn: "00101" 


system:
  # Arguments passed to DPDK 
  # eal_cpu_args: "--lcores (0-1)@(1-30)"
  # https://doc.dpdk.org/guides/linux_gsg/linux_eal_parameters.html
  # This is 1:1 mapping between logical core and physical cores
  eal_cpu_args: "--lcores (0-22)@(9-31)"
  # Arguments passes to taskset (if empty, no taskset is used)
  taskset_cpu_args: "9-31"


# These will be assigned by K8s CNI
sriov:
  cniVersion: 0.3.1 #<< cniVersion >>
  cucp_ip: 192.168.101.205 #<< CUCP pod IP SRIOV_CUCP >>
  cucp_prefix: 24 #<< Prefix Value >>
  cucp_gateway: 192.168.101.1 #<< Gateway IP Address >>
  cuup_ip: 192.168.110.205 #<< CUUP pod IP SRIOV_CUUP >>
  cuup_prefix: 24 #<< Prefix Value >>
  cuup_gateway: 192.168.110.1 #<< Gateway IP Address >>
  resourceName: "intel.com/intel_810_1" #<< Name of SRIOV Resource for NGAP on CUCP >>


# Run a script to set vLAN FH isolation on switch prior to starting L1 through custom API
vlan_isolation:
  enabled: false
  url: "192.168.1.50:8080"


# Add troubleshooting container to each pod, for debugging
troubleshooter:
  enabled: true
  # Any lightweight image that can run a shell and ncat
  image: "praqma/network-multitool"



jbpf:
  # Currently, codelets can only be loaded from a local directory
  codelets_vol_mount: ""
  port: 30450
  cfg:  # the following is passed directly to srsRAN as it's Jbpf config
    jbpf_run_path: "/tmp"
    jbpf_namespace: "jbpf"
    jbpf_enable_ipc: 0
    jbpf_standalone_io_out_ip: "PUT_JBPF_DECODER_IP_HERE"
    jbpf_standalone_io_out_port: 20788
    jbpf_standalone_io_in_port: 30400
    jbpf_standalone_io_policy: 0
    jbpf_standalone_io_priority: 0
    jbpf_io_mem_size_mb: 1024
    jbpf_ipc_mem_name: "jrt_controller"
    jbpf_enable_lcm_ipc: 1
    jbpf_lcm_ipc_name: "jbpf_lcm_ipc"
    jbpf_agent_cpu: 0
    jbpf_agent_policy: 1
    jbpf_agent_priority: 30
    jbpf_maint_cpu: 0
    jbpf_maint_policy: 0
    jbpf_maint_priority: 0

jrtc_controller:
  # Currently, jrtc applications can only be loaded from a local directory
  apps_vol_mount: ""
  image: ghcr.io/microsoft/jrt-controller/jrt-controller-azurelinux:latest
  port: 30500
  logging:
    jrtc_level: info
    jbpf_level: info
  log_analytics:
    enabled: false
    workspace_id: "PUT_WORKSPACE_ID_HERE"
    primary_key: "PUT_PRIMARY_KEY_HERE"

  # Start local decoder as a part of the jrtc controller pod for debugging
  local_decoder: 
    enabled: false
    port: 30501
    log_analytics:
      enabled: false

udp_forwarder:
  enabled: true
  port: 30502
 


# RANBooster configurations
das:
  enabled: false
  # For 100Mhz , 4 Antenna Setup, Max RUs 4 : 
  #    - image: altran5gran.azurecr.io/ranbooster/ranbooster-lite:v3
  #    - Example Config : https://dev.azure.com/belgrade/5GRack/_git/ranDeploymentConfig?path=/redmond/values.1st.floor.das.yaml
  # For 100Mhz , 2 Antenna Setup: Max RUs 9 : 
  #    - image:  altran5gran.azurecr.io/ranbooster/ranbooster-lite:v3-100mhz-2antenna
  #    - Example Config: https://dev.azure.com/belgrade/5GRack/_git/ranDeploymentConfig?path=/redmond/values.2nd.floor.das.yaml 
  
  image: "altran5gran.azurecr.io/ranbooster/ranbooster-lite:v3"
  dasboxes:
    das1:
      middlebox:
        dasName: "das-du-front"
        vlan: 1
        localMAC: "00:00:11:11:22:33"  # Local MAC address of the Middlebox
        remoteMAC: "AA:BB:CC:11:22:33" # Local MAC address of the Middlebox
        ruDPDKResource: "intel.com/intel_sriov_dpdk_ru1"
        isolcore: 2
      cells:
        cell1:
          ruNAME: "das1"
          ruLocalMAC: "00:00:11:11:33:71" # RAN server fronthaul MAC address 
          ruRemoteMAC: "AA:BB:CC:11:33:71" # Remote ru fronthaul MAC address 
          vlan: 71      


# RANBooster configurations
dmimo:
  enabled: false
  # With Das:
  #   For 100Mhz , Max RUs 4 
  #   image: altran5gran.azurecr.io/ranbooster/ranbooster-lite:v3
  #   Example Config: https://dev.azure.com/belgrade/5GRack/_git/ranDeploymentConfig?path=/redmond/debug/values.2nd.floor.dmimo-das.yaml 
  # wihtout Das:
  #   For 100Mhz , Max RUs 2
  #   image: altran5gran.azurecr.io/ranbooster/ranbooster-lite:v3
  #   Example Condig: https://dev.azure.com/belgrade/5GRack/_git/ranDeploymentConfig?path=/redmond/debug/values.dmimo.ru1-ru2.yaml
  image: "altran5gran.azurecr.io/ranbooster/ranbooster-lite:v3"
  vrus:
    vru1:
      middlebox:
        dmimoMiddleboxName: "middlebox-vru1"
        vlan: 51
        localMAC: "AA:BB:CC:11:33:41"  # Local MAC address of the Middlebox
        remoteMAC: "00:00:11:11:33:41" # Local MAC address of the Middlebox
        ruDPDKResource: "intel.com/intel_sriov_dpdk_ru7"
        isolcore: 3
      rus:
        ru1:
          ruNAME: "ru1"
          ruLocalMAC: "00:11:22:33:0A:A4" # MAC address that is used in both Frounthaul VFs (It has to be unique for each RAN deployment)
          ruRemoteMAC: "6C:AD:AD:00:0A:A4" # MAC address of the Remote ru
          ruVLAN: "31"
          ruDPDKResource: "intel.com/intel_sriov_dpdk_ru8"
          bitmask: 51
        ru2:
          ruNAME: "ru2"
          ruLocalMAC: "00:11:22:33:0B:4E" # MAC address that is used in both Frounthaul VFs (It has to be unique for each RAN deployment)
          ruRemoteMAC: "6C:AD:AD:00:0B:4E" # MAC address of the Remote ru
          ruVLAN: "32"
          ruDPDKResource: "intel.com/intel_sriov_dpdk_ru9"
          bitmask: 204



# If enabled, the chart doesn't start executables in the containers, 
# so a user can exec into them and start them manually
debug_mode:
  enabled: false


# The following are directly copied into srsRAN config
# For reference, see https://docs.srsran.com/projects/project/en/latest/user_manuals/source/config_ref.html

log:
  rrc_level: info
  mac_level: info
  rlc_level: info

# Also metrics, pcap

