 {{- if eq (int $.Values.jbpf.cfg.jbpf_enable_ipc) 1 }}
 {{ $cni_version := $.Values.sriov.cniVersion}}

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: jrtc-config
data:
  config: |-
    jbpf_io_config:
      jbpf_namespace: {{ $.Values.jbpf.cfg.jbpf_namespace }}
      jbpf_path: {{ $.Values.jbpf.cfg.jbpf_run_path }}
    jrtc_router_config:
      ipc_name: {{ $.Values.jbpf.cfg.jbpf_ipc_mem_name }}

---
# DNS name: jrtc-service.{{ .Release.Namespace }}.svc.cluster.local
apiVersion: v1
kind: Service
metadata:
  name: jrtc-service
  namespace: {{ .Release.Namespace }}
  labels:
    app: jrtc
spec:
  type: NodePort
  ports:
    - name: http
      port: 3001
      targetPort: 3001
      nodePort: {{ .Values.jrtc_controller.port }}
      protocol: TCP
  selector:
    app: jrtc-service


{{- if $.Values.jrtc_controller.local_decoder.enabled }}
---
# DNS name: jrtc-decoder.{{ .Release.Namespace }}.svc.cluster.local
apiVersion: v1
kind: Service
metadata:
  name: jrtc-decoder
  namespace: {{ .Release.Namespace }}
  labels:
    app: jrtc
spec:
  type: NodePort
  ports:
    - name: http
      port: 20789
      targetPort: 20789
      nodePort: {{ .Values.jrtc_controller.local_decoder.port }}
      protocol: TCP
  selector:
    app: jrtc-service
{{- end }}



{{- if $.Values.jrtc_controller.app_json_input.enabled }}
---
# DNS name: jrtc-json-input.{{ .Release.Namespace }}.svc.cluster.local
apiVersion: v1
kind: Service
metadata:
  name: jrtc-json-input
  namespace: {{ .Release.Namespace }}
  labels:
    app: jrtc
spec:
  type: NodePort
  ports:
    - name: udp
      port: 20790
      targetPort: 20790
      nodePort: {{ .Values.jrtc_controller.app_json_input.port }}
      protocol: UDP
  selector:
    app: jrtc-service
{{- end }}



---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: jrtc
  labels:
    app: jrtc
    {{- include "ran-5g.labels" $ | nindent 4 }}
spec:
  serviceName: jrtc-service
  selector:
    matchLabels:
      app: jrtc-service
      {{- include "ran-5g.selectorLabels" $ | nindent 6 }}
  template:
    metadata:
      labels:
        app: jrtc-service
        {{- include "ran-5g.selectorLabels" $ | nindent 8 }}
    spec:
      securityContext:
        runAsUser: 0
        runAsGroup: 0
      serviceAccountName: srs-service-account
      terminationGracePeriodSeconds: 0
      volumes:
      # ushasi - Fixed shared memory for k3d environment
      - name: dshm
        hostPath:
          path: /tmp/shared-memory
          type: DirectoryOrCreate
      # ushasi - End of shared memory fix
      - name: hugepage
        hostPath:
          path: /dev/hugepages
      - name: sys
        hostPath:
          path: /sys
      - name: dev
        hostPath:
          path: /dev
      - name: jrtc-config
        configMap:
          name: jrtc-config
      - name: varjbpf
        hostPath:
          path: {{ printf "%s/%s" $.Values.jbpf.cfg.jbpf_run_path $.Values.jbpf.cfg.jbpf_namespace }}
      - name: apps
        hostPath:
          path: {{ $.Values.jrtc_controller.apps_vol_mount }}
      - name: codelets
        hostPath:
          path: {{ $.Values.jbpf.codelets_vol_mount }}

      {{- if $.Values.image.pullSecret }}
      imagePullSecrets:
      - name: {{ $.Values.image.pullSecret }}
      {{- end }}
      
      containers:
      - name: jrtc
        image: "{{ $.Values.jrtc_controller.image }}"
        imagePullPolicy: "{{ $.Values.image.pullPolicy }}"
        volumeMounts:
        - name: dshm
          mountPath: /dev/shm
        - name: hugepage
          mountPath: /dev/hugepages
        - name: sys
          mountPath: /sys/
        - name: dev
          mountPath: /dev
        - name: jrtc-config
          mountPath: /jrtc-config
        - name: varjbpf
          mountPath: {{ printf "%s/%s" $.Values.jbpf.cfg.jbpf_run_path $.Values.jbpf.cfg.jbpf_namespace }}
        - name: apps
          mountPath: /apps
        - name: codelets
          mountPath: /codelets
        command: ["/bin/sh", "-c"]
        {{- if  $.Values.debug_mode.enabled }}
        args: [ "sleep 99999999d" ]
        {{- else }}
        args: [ "/jrtc/out/bin/jrtc --config=/jrtc-config/config" ]
        {{- end }}
        securityContext:
          privileged: true
          capabilities:
            add:
            - SYS_ADMIN
            - IPC_LOCK
            - SYS_NICE
        tty: true
        stdin: true
        env:
          - name: JRTC_PATH
            value: "/jrtc"
          - name: JRTC_APP_PATH
            value: "/jrtc/out/lib/"
          - name: LD_LIBRARY_PATH
            value: "$LD_LIBRARY_PATH:/jrtc/out/lib/"
        {{- if $.Values.jrtc_controller.log_analytics.enabled }}          
          - name: LA_WORKSPACE_ID
            value: {{ $.Values.jrtc_controller.log_analytics.workspace_id }}
          - name: LA_PRIMARY_KEY
            value: {{ $.Values.jrtc_controller.log_analytics.primary_key }}
        {{- end }}
        {{- if $.Values.jrtc_controller.app_json_input.enabled }}
          - name: JRTC_JSON_INPUT_PORT
            value: "{{ .Values.jrtc_controller.app_json_input.port }}"
        {{- end }}
        resources:
          limits:
            memory: {{ $.Values.resources.jrtc.limits.memory }}
            {{- if $.Values.resources.jrtc.limits.hugepages2Gi }}
            hugepages-2Gi: {{ $.Values.resources.jrtc.limits.hugepages2Gi }}
            {{- end }}
          requests:
            memory: {{ $.Values.resources.jrtc.limits.memory }}
            {{- if $.Values.resources.jrtc.requests.hugepages2Gi }}
            hugepages-2Gi: {{ $.Values.resources.jrtc.requests.hugepages2Gi }}
            {{- end }}



    {{- if $.Values.jrtc_controller.local_decoder.enabled }}
      - name: jrtc-decoder
        image: "{{ $.Values.jrtc_controller.image }}"
        imagePullPolicy: "{{ $.Values.image.pullPolicy }}"
        volumeMounts:
        - name: dshm
          mountPath: /dev/shm
        - name: hugepage
          mountPath: /dev/hugepages
        - name: sys
          mountPath: /sys/
        - name: dev
          mountPath: /dev
        - name: varjbpf
          mountPath: {{ printf "%s/%s" $.Values.jbpf.cfg.jbpf_run_path $.Values.jbpf.cfg.jbpf_namespace }}
        command: ["/bin/sh", "-c"]
        {{- if  $.Values.debug_mode.enabled }}
        args: [ "sleep 99999999d" ]
        {{- else }}
        {{- if $.Values.jrtc_controller.local_decoder.log_analytics.enabled }}          
        args: [ "/jrtc/out/bin/jrtc-ctl decoder run --decoder-data-enabled --log-level debug --json-data-enabled --loganalytics-enabled" ]
        {{- else }}
        args: [ "/jrtc/out/bin/jrtc-ctl decoder run --decoder-data-enabled --log-level debug --json-data-enabled" ]
        {{- end }}
        {{- end }}
        securityContext:
          privileged: true
          capabilities:
            add:
            - SYS_ADMIN
            - IPC_LOCK
            - SYS_NICE
        tty: true
        stdin: true
        env:
          - name: JRTC_PATH
            value: "/jrtc"
          - name: JRTC_APP_PATH
            value: "/jrtc/out/lib/"
          - name: LD_LIBRARY_PATH
            value: "$LD_LIBRARY_PATH:/jrtc/out/lib/"
        {{- if $.Values.jrtc_controller.local_decoder.log_analytics.enabled }}          
          - name: LA_WORKSPACE_ID
            value: {{ $.Values.jrtc_controller.log_analytics.workspace_id }}
          - name: LA_PRIMARY_KEY
            value: {{ $.Values.jrtc_controller.log_analytics.primary_key }}
        {{- end }}

        resources:
          limits:
            memory: {{ $.Values.resources.jrtc.limits.memory }}
            hugepages-1Gi: {{ $.Values.resources.jrtc.limits.hugepages2Gi }}
          requests:
            memory: {{ $.Values.resources.jrtc.limits.memory }}
            hugepages-1Gi: {{ $.Values.resources.jrtc.limits.hugepages2Gi }}
    {{- end }}
        
{{- end }}
